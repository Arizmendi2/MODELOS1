####<PROCESO POISSON HOMOGENEO
procepoissonH<- function(T ,lamda)
{
  S<- vector()
  t<- 0 ; I<-0
  repeat
  {
    u1<-runif(1); t<-t-(1/lambda)*log(u1)
    if(t>T) break else {I<- I+1; S[I]<-t}
  }
return(S)
  }
S<-procepoissonH(3,2) #lambda=3 y t=2
n<- length(S)
counts <- 1:n 
counts
S
plot(S, counts, pch=16, ylim = c(0,n))
points(S, c(0, counts[-n]))
segments(
  x0= c(0, S[-n]),
  y0= c(0, counts[-n]),
  x1= S,
  y1= c(0, counts[-n])
#en el ejey son los tiempo de ocurrencia y el y son los conteos
 )
  
  
  # simulacion proceso poisson homogeneo
poisson_h <- function(lambda,Tmax){
  u <- runif(1)
  t <- c(-log(u)/lambda)
  T <- c(t)
  i <- 1
  while( t < Tmax){
    u <- runif(1)
    t <- t -log(u)/lambda
    T <- c(T,t)
    i <- i+1
  }
  T[i] <- Tmax
  return(T)
}
# simulacion proceso poisson no-homogeneo version 1
poisson_nh_v1 <- function(l,Tmax){
  T <- poisson_h(l,Tmax)
  n <- length(T)
  I <- as.integer(double(n))
  p <- lnh(T[1],4*pi)/l
  u <- runif(1)
  if(u<p) I[1] <- 1
  else I[1] <- 0
  for( j in 2:n){
    p <- lnh(T[j],4*pi)/l
    u <- runif(1)
    if(u<p) I[j] <- I[j-1]+1
    else I[j] <- I[j-1]
  }
  R <- rbind(T,I)
  return(R)
}
