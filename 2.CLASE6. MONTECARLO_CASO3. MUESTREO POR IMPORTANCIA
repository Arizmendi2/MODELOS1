#Ejemplo 3: Caso tres, soporte infinito
g<-function(x)(asin(x)+exp(x))#primero se define esta función
h<-function(x)(g(1/(x+1))*exp(-x))
curve(h(x), xlim=c(0,10))
#Cálculo de la integral con la función "integrate"
integrate(h,0,Inf)
#Integracion MC 
int.1<-function(nsim)
{
  munif<-runif(nsim)
  mean(g(munif)*exp(-((1/munif)-1))*(1/munif)^2)
}
int.1(10000)
##Ejemplo 4: Muestreo por importancia
#Se muestra la gráfica de la función a integrar y la auxiliar
curve(dnorm(x), 4.5, 6, ylab = "dnorm(x) y dexp(x-4.5)*k")
abline(v = 4.5)
abline(h = 0)
escala <- dnorm(4.5)  # Reescalado para comparación...
curve(dexp(x - 4.5) * escala, add = TRUE, lty = 2) 
#Se generan los valores de la densidad auxiliar y se calculan los pesos:
nsim <- 10^3
y <- rexp(nsim) + 4.5    #  Y ~ g se generar los valores de la densidad auxiliar
w <- dnorm(y)/dexp(y - 4.5)
#La aproximación por simulación sería mean(w * h(y)):
# Ojo: la función h(x) es la función indicadora (1 si x > 4.5 => h(y) = 1)
mean(w) # w*h(y) es la aproximacion de la integral porque la inidicadora es 1, de no ser asi, se tiene que hacer la multiplicación
## [1] 3.243321e-06
pnorm(-4.5)  # valor teórico, es el real
## [1] 3.397673e-06
plot(cumsum(w)/1:nsim, type = "l", ylab = "Aproximación",
     xlab = "Iteraciones")
abline(h = pnorm(-4.5), lty = 2)
# si la grafica converge, entonces el proceso es correcto, de los contrario no serviria.

